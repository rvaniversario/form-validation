import type { NextPage } from "next";
import Head from "next/head";
import { useState, forwardRef } from "react";
import Form from "../components/Form";
import Snackbar from "@mui/material/Snackbar";
import MuiAlert, { AlertProps } from "@mui/material/Alert";
import { useFormik } from "formik";
import * as yup from "yup";
import { MyFormValues } from "../types";
import styled from "styled-components";

const Container = styled.div`
  margin: 0 auto;
`;

const Alert = forwardRef<HTMLDivElement, AlertProps>(function Alert(
  props,
  ref
) {
  return <MuiAlert elevation={6} ref={ref} variant="filled" {...props} />;
});

const Home: NextPage = () => {
  const [message, setMessage] = useState("");
  const [submitted, setSubmitted] = useState(false);
  const [open, setOpen] = useState(false);

  const PwRegex =
    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/;
  const phoneRegex = /^(09)\d{9}$/;

  const initialValues: MyFormValues = {
    username: "",
    password: "",
    confirmPassword: "",
    firstName: "",
    middleName: "",
    lastName: "",
    email: "",
    phone: "",
  };

  const formik = useFormik({
    initialValues: initialValues,
    onSubmit: (values) => {
      console.log(values);
      setSubmitted(true);
      setMessage("Form submitted");
      setOpen(true);
    },
    validationSchema: yup.object({
      username: yup
        .string()
        .trim()
        .required("Username is required")
        .max(10, "Username must not exceed 10 characters")
        .min(4, "Username should not be less than 4"),
      password: yup
        .string()
        .required("Password is required")
        .max(15, "Password must not exceed 15 characters")
        .min(6, "Password should not be less than 6 characters")
        .matches(
          PwRegex,
          "Password should contain at least 1 uppercase, a lowercase, a special character, and a number."
        ),
      confirmPassword: yup
        .string()
        .required("Confirm password")
        .oneOf([yup.ref("password"), null], "Password does not match"),
      firstName: yup.string().required("First name is required"),
      middleName: yup.string(),
      lastName: yup.string().required("Lastname is required"),
      email: yup
        .string()
        .email("Must be a valid email")
        .required("Email is required"),
      phone: yup
        .string()
        .matches(
          phoneRegex,
          "Phone must start with 0 and must have an 11-digit number"
        )
        .required("Phone is required"),
    }),
  });

  const handleClose = (
    event?: React.SyntheticEvent | Event,
    reason?: string
  ) => {
    if (reason === "clickaway") {
      return;
    }

    setOpen(false);
  };

  return (
    <Container>
      <Head>
        <title>Form Validation</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Form formik={formik} />
      {submitted && (
        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>
          <Alert
            onClose={handleClose}
            severity="success"
            sx={{ width: "100%" }}
          >
            {message}
          </Alert>
        </Snackbar>
      )}
    </Container>
  );
};

export default Home;
